{"version":3,"sources":["BottomTabBar.tsx"],"names":["React","View","Animated","StyleSheet","Keyboard","Platform","Dimensions","NavigationContext","CommonActions","useTheme","SafeAreaConsumer","BottomTabItem","DEFAULT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","BottomTabBar","state","navigation","descriptors","activeBackgroundColor","activeTintColor","adaptive","allowFontScaling","inactiveBackgroundColor","inactiveTintColor","keyboardHidesTabBar","labelPosition","labelStyle","showIcon","showLabel","style","tabStyle","colors","useState","get","dimensions","setDimensions","height","width","layout","setLayout","keyboardShown","setKeyboardShown","Value","visible","routes","useEffect","timing","toValue","duration","useNativeDriver","start","handleOrientationChange","window","handleKeyboardShow","handleKeyboardHide","finished","addEventListener","OS","addListener","removeEventListener","removeListener","handleLayout","e","nativeEvent","shouldUseHorizontalLabels","isLandscape","position","maxTabItemWidth","flattenedStyle","flatten","maxWidth","length","insets","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","bottom","paddingBottom","content","map","route","index","focused","options","key","onPress","event","emit","type","target","defaultPrevented","dispatch","navigate","name","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","tabBarTestID","tabBarButton","tabBarIcon","create","left","right","borderTopWidth","hairlineWidth","elevation","flex","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Keyboard,\n  Platform,\n  LayoutChangeEvent,\n  ScaledSize,\n  Dimensions,\n} from 'react-native';\nimport {\n  NavigationContext,\n  CommonActions,\n  useTheme,\n} from '@react-navigation/native';\nimport { SafeAreaConsumer } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport { BottomTabBarProps } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 50;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive = true,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  showIcon,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n\n  const [dimensions, setDimensions] = React.useState(Dimensions.get('window'));\n  const [layout, setLayout] = React.useState({ height: 0, width: 0 });\n  const [keyboardShown, setKeyboardShown] = React.useState(false);\n\n  const [visible] = React.useState(() => new Animated.Value(0));\n\n  const { routes } = state;\n\n  React.useEffect(() => {\n    if (keyboardShown) {\n      Animated.timing(visible, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [keyboardShown, visible]);\n\n  React.useEffect(() => {\n    const handleOrientationChange = ({ window }: { window: ScaledSize }) => {\n      setDimensions(window);\n    };\n\n    const handleKeyboardShow = () => setKeyboardShown(true);\n\n    const handleKeyboardHide = () =>\n      Animated.timing(visible, {\n        toValue: 1,\n        duration: 250,\n        useNativeDriver: true,\n      }).start(({ finished }) => {\n        if (finished) {\n          setKeyboardShown(false);\n        }\n      });\n\n    Dimensions.addEventListener('change', handleOrientationChange);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return () => {\n      Dimensions.removeEventListener('change', handleOrientationChange);\n\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, [visible]);\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setLayout(layout => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const shouldUseHorizontalLabels = () => {\n    const isLandscape = dimensions.width > dimensions.height;\n\n    if (labelPosition) {\n      let position;\n\n      if (typeof labelPosition === 'string') {\n        position = labelPosition;\n      } else {\n        position = labelPosition({ dimensions });\n      }\n\n      if (position) {\n        return position === 'beside-icon';\n      }\n    }\n\n    if (!adaptive) {\n      return false;\n    }\n\n    if (dimensions.width >= 768) {\n      // Screen size matches a tablet\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= dimensions.width;\n    } else {\n      return isLandscape;\n    }\n  };\n\n  return (\n    <SafeAreaConsumer>\n      {insets => (\n        <Animated.View\n          style={[\n            styles.tabBar,\n            {\n              backgroundColor: colors.card,\n              borderTopColor: colors.border,\n            },\n            keyboardHidesTabBar\n              ? {\n                  // When the keyboard is shown, slide down the tab bar\n                  transform: [\n                    {\n                      translateY: visible.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [layout.height, 0],\n                      }),\n                    },\n                  ],\n                  // Absolutely position the tab bar so that the content is below it\n                  // This is needed to avoid gap at bottom when the tab bar is hidden\n                  position: keyboardShown ? 'absolute' : null,\n                }\n              : null,\n            {\n              height: DEFAULT_TABBAR_HEIGHT + (insets ? insets.bottom : 0),\n              paddingBottom: insets ? insets.bottom : 0,\n            },\n            style,\n          ]}\n          pointerEvents={keyboardHidesTabBar && keyboardShown ? 'none' : 'auto'}\n        >\n          <View style={styles.content} onLayout={handleLayout}>\n            {routes.map((route, index) => {\n              const focused = index === state.index;\n              const { options } = descriptors[route.key];\n\n              const onPress = () => {\n                const event = navigation.emit({\n                  type: 'tabPress',\n                  target: route.key,\n                });\n\n                if (!focused && !event.defaultPrevented) {\n                  navigation.dispatch({\n                    ...CommonActions.navigate(route.name),\n                    target: state.key,\n                  });\n                }\n              };\n\n              const onLongPress = () => {\n                navigation.emit({\n                  type: 'tabLongPress',\n                  target: route.key,\n                });\n              };\n\n              const label =\n                options.tabBarLabel !== undefined\n                  ? options.tabBarLabel\n                  : options.title !== undefined\n                  ? options.title\n                  : route.name;\n\n              const accessibilityLabel =\n                options.tabBarAccessibilityLabel !== undefined\n                  ? options.tabBarAccessibilityLabel\n                  : typeof label === 'string'\n                  ? `${label}, tab, ${index + 1} of ${routes.length}`\n                  : undefined;\n\n              return (\n                <NavigationContext.Provider\n                  key={route.key}\n                  value={descriptors[route.key].navigation}\n                >\n                  <BottomTabItem\n                    route={route}\n                    focused={focused}\n                    horizontal={shouldUseHorizontalLabels()}\n                    onPress={onPress}\n                    onLongPress={onLongPress}\n                    accessibilityLabel={accessibilityLabel}\n                    testID={options.tabBarTestID}\n                    allowFontScaling={allowFontScaling}\n                    activeTintColor={activeTintColor}\n                    inactiveTintColor={inactiveTintColor}\n                    activeBackgroundColor={activeBackgroundColor}\n                    inactiveBackgroundColor={inactiveBackgroundColor}\n                    button={options.tabBarButton}\n                    icon={options.tabBarIcon}\n                    label={label}\n                    showIcon={showIcon}\n                    showLabel={showLabel}\n                    labelStyle={labelStyle}\n                    style={tabStyle}\n                  />\n                </NavigationContext.Provider>\n              );\n            })}\n          </View>\n        </Animated.View>\n      )}\n    </SafeAreaConsumer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]}